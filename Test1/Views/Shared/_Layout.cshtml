<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/fontEnd/css/style.css")" />


    <script src="~/fontEnd/js/main.js"></script>




    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
</head>
<body>
    <div class="App">
        <div class="appSidebar">
            <div class="wrapperSidebar">
                <div class="sidebarLogo">
                    <div class="logo"></div>
                </div>
                <ul class="navbarMenu">
                    <li class="navbarItem " id="library">
                        <div class="linkItem">
                            <svg class="navItemicon" width="24" height="24" viewBox="0 0 24 24" fill="currentColor"><path fill-rule="evenodd" clip-rule="evenodd" d="M6.5 2.75C6.08579 2.75 5.75 3.08579 5.75 3.5C5.75 3.91421 6.08579 4.25 6.5 4.25H17.5C17.9142 4.25 18.25 3.91421 18.25 3.5C18.25 3.08579 17.9142 2.75 17.5 2.75H6.5ZM3 9.5C3 7.42893 4.67893 5.75 6.75 5.75H17.25C19.3211 5.75 21 7.42893 21 9.5V17.5C21 19.5711 19.3211 21.25 17.25 21.25H6.75C4.67893 21.25 3 19.5711 3 17.5V9.5ZM6.75 7.25C5.50736 7.25 4.5 8.25736 4.5 9.5V17.5C4.5 18.7426 5.50736 19.75 6.75 19.75H17.25C18.4926 19.75 19.5 18.7426 19.5 17.5V9.5C19.5 8.25736 18.4926 7.25 17.25 7.25H6.75ZM13.666 8.87596C13.4359 8.72253 13.14 8.70823 12.8961 8.83874C12.6522 8.96926 12.5 9.2234 12.5 9.5V13.0499C12.125 12.8581 11.7001 12.75 11.25 12.75C9.73122 12.75 8.5 13.9812 8.5 15.5C8.5 17.0188 9.73122 18.25 11.25 18.25C12.6911 18.25 13.8733 17.1415 13.9905 15.7307C13.9967 15.6916 14 15.6515 14 15.6107V15.5V10.9014L15.084 11.624C15.4286 11.8538 15.8943 11.7607 16.124 11.416C16.3538 11.0714 16.2607 10.6057 15.916 10.376L13.666 8.87596ZM12.5 15.5C12.5 14.8096 11.9404 14.25 11.25 14.25C10.5596 14.25 10 14.8096 10 15.5C10 16.1904 10.5596 16.75 11.25 16.75C11.9404 16.75 12.5 16.1904 12.5 15.5Z" fill-opacity="0.8"></path></svg>
                            <span class"">Thư viện</span>
                        </div>
                    </li>
                    <li class="navbarItem" id="Account">
                        <div class="linkItem">
                            <svg class="navItemicon" width="24" height="24" viewBox="0 0 24 24" fill="currentColor"><path fill-rule="evenodd" clip-rule="evenodd" d="M3.25 12C3.25 7.16751 7.16751 3.25 12 3.25C16.8325 3.25 20.75 7.16751 20.75 12C20.75 16.8325 16.8325 20.75 12 20.75C7.16751 20.75 3.25 16.8325 3.25 12ZM12 1.75C6.33908 1.75 1.75 6.33908 1.75 12C1.75 17.6609 6.33908 22.25 12 22.25C17.6609 22.25 22.25 17.6609 22.25 12C22.25 6.33908 17.6609 1.75 12 1.75ZM9.25 12C9.25 10.4812 10.4812 9.25 12 9.25C13.5188 9.25 14.75 10.4812 14.75 12C14.75 13.5188 13.5188 14.75 12 14.75C10.4812 14.75 9.25 13.5188 9.25 12ZM12 7.75C9.65279 7.75 7.75 9.65279 7.75 12C7.75 14.3472 9.65279 16.25 12 16.25C14.3472 16.25 16.25 14.3472 16.25 12C16.25 9.65279 14.3472 7.75 12 7.75Z" fill-opacity="0.8"></path></svg>
                            <span class"">Tài Khoản</span>
                        </div>
                    </li>
                    <li class="navbarItem" id="Playlist">
                        <div class="linkItem">
                            <svg class="navItemicon" width="24" height="24" viewBox="0 0 24 24" fill="currentColor"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.8722 2.67978C11.911 3.09217 11.6082 3.45794 11.1958 3.49675C6.88011 3.90291 3.5 7.54519 3.5 11.98C3.5 16.6875 7.30771 20.501 12.0014 20.501C16.6952 20.501 20.5029 16.6875 20.5029 11.98C20.5029 10.3767 20.0618 8.87895 19.2951 7.59953C19.0822 7.24422 19.1976 6.78359 19.5529 6.57068C19.9082 6.35777 20.3688 6.4732 20.5818 6.82851C21.4842 8.33451 22.0029 10.0978 22.0029 11.98C22.0029 17.513 17.5266 22.001 12.0014 22.001C6.4763 22.001 2 17.513 2 11.98C2 6.76649 5.9737 2.48158 11.0553 2.00335C11.4676 1.96454 11.8334 2.26739 11.8722 2.67978ZM11.8656 6.19339C11.9286 6.60278 11.6479 6.98576 11.2385 7.0488C8.85318 7.4161 7.02419 9.48361 7.02419 11.9799C7.02419 13.3678 7.58856 14.622 8.50124 15.527C8.79536 15.8186 8.79736 16.2935 8.50571 16.5876C8.21405 16.8818 7.73918 16.8838 7.44506 16.5921C6.25964 15.4166 5.52419 13.7835 5.52419 11.9799C5.52419 8.73441 7.90208 6.04487 11.0102 5.56627C11.4196 5.50323 11.8026 5.784 11.8656 6.19339ZM16.7493 8.68305C17.1175 8.49328 17.5698 8.63791 17.7595 9.00609C18.2192 9.89782 18.4783 10.9096 18.4783 11.9799C18.4783 15.5622 15.58 18.469 12.0013 18.469C11.5871 18.469 11.2513 18.1333 11.2513 17.719C11.2513 17.3048 11.5871 16.969 12.0013 16.969C14.7485 16.969 16.9783 14.7368 16.9783 11.9799C16.9783 11.1542 16.7788 10.3774 16.4262 9.69332C16.2365 9.32514 16.3811 8.87282 16.7493 8.68305ZM14.3787 2.2439C13.9763 2.14558 13.5704 2.39207 13.4721 2.79444C13.4513 2.87927 13.4459 2.96425 13.4541 3.04647V9.4046C13.0253 9.16142 12.5297 9.02255 12.0013 9.02255C10.3691 9.02255 9.04861 10.3481 9.04861 11.9799C9.04861 13.6117 10.3691 14.9373 12.0013 14.9373C13.6336 14.9373 14.9541 13.6117 14.9541 11.9799C14.9541 11.9479 14.9535 11.916 14.9525 11.8842C14.9536 11.8681 14.9541 11.8519 14.9541 11.8355V3.98669C15.7486 4.28167 16.4875 4.69246 17.1504 5.19895C17.4795 5.45044 17.9502 5.3875 18.2017 5.05837C18.4532 4.72924 18.3902 4.25855 18.0611 4.00706C16.9849 3.18473 15.7363 2.57565 14.3787 2.2439ZM12.0013 10.5225C11.2005 10.5225 10.5486 11.1735 10.5486 11.9799C10.5486 12.7863 11.2005 13.4373 12.0013 13.4373C12.8022 13.4373 13.4541 12.7863 13.4541 11.9799C13.4541 11.1735 12.8022 10.5225 12.0013 10.5225Z" fill-opacity="0.8"></path></svg>
                            <span class"">PlayList</span>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
        <div class="appHeader" id="appHeader">
            <div class="headerLeft">
                <form class="formSearch" id="searchForm">
                    <div class="searchContainer">
                        <button type="submit" class="sreachBtn">
                            <i class="fa-solid fa-magnifying-glass"></i>
                        </button>
                        <div class="inputWrapper">
                            <input type="text" id="textInput" class="inputSearch" name="query" placeholder="Tìm kiếm bài hát, nghệ sỹ, thể loại , .....">

                        </div>
                    </div>
                </form>
            </div>



            <div class="headerRight">
                <button class="btn btnLogin">Welcome, @Session["Username"]!</button>
                <a href="@Url.Action("Logout", "Account")" class="btn btnRegister">Đăng xuất</a>
                <div class="settingItem">
                    <button class="settingUserBtn">
                        <i class="fa-solid fa-gear"></i>
                    </button>

                </div>

            </div>
        </div>


        <div id="searchResults" class="search-results"></div>
        <div class="appBody" id="appBody">
            <div class="wrapperAppBody">
                <div id="mainAppBody" class="mainAppBody">
                    <div class="bodyContent">
                        <div class="divBodyContent" id="divBodyContent">
                            @RenderBody()
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="nowPlayingBar">
            <div class="playerControl">
                <div class="playerControlLeft">
                    <div class="medialeft" id="background_song" style="background-image: url('SongBackGround/defaut.png'); background-position: center; background-repeat: no-repeat; background-size: cover; ">
                    </div>
                    <div class="mediaCenter">
                        <div class="songInfoName" id="songName">
                            <span>Null</span>
                        </div>
                        <div class="songInfoArtis" id="singerName">
                            <span>Null</span>
                        </div>
                    </div>
                    <div class="mediaRight">
                        <button class="btnMediaRight">

                            <i class="mediaRightIcon fa-regular fa-heart"></i>
                        </button>
                        <button class="btnMediaRight">
                            <i class="mediaRightIcon fa-solid fa-ellipsis" id="moreOptions"></i>
                        </button>
                    </div>

                </div>
                <div id="playlistMenu" class="playlistMenu" style="display: none;">
                    <ul>
                        <li class="addToPlaylist" data-playlist-id="1">Playlist 1</li>
                        <li class="addToPlaylist" data-playlist-id="2">Playlist 2</li>
                        <li class="addToPlaylist" data-playlist-id="2">Playlist 3</li>
                        <li class="addToPlaylist" data-playlist-id="2">Playlist 4</li>
                        <li class="addToPlaylist" data-playlist-id="2">Playlist 5</li>
                        <li class="addToPlaylist" data-playlist-id="2">Playlist 6</li>
                        <li class="addToPlaylist" data-playlist-id="2">Playlist 7</li>


                    </ul>
                </div>
                <div class="playerControlCenter">
                    <div class="control">
                        <button class="btnn btn-repeat" style="color :black">
                            <i class="fa-solid fa-repeat" id="reloads"></i>

                        </button>
                        <button class="btnn btn-pre" style="color : black">
                            <i class="fa-solid fa-backward-step" id="previous"></i>
                        </button>
                        <button class="btnn btn-play-pause" style="color : black">
                            <i class="pause fa-solid fa-pause" id="pause"></i>
                            <i class="play fa-solid fa-play" id="play"></i>
                        </button>
                        <button class="btnn btn-next" style="color : black">
                            <i class="fa-solid fa-forward-step" id="nexts"></i>
                        </button>
                        <button class="btnn btn-suffle" style="color : black">
                            <i class="fa-solid fa-shuffle" id="shuffles"></i>
                        </button>
                    </div>
                    <div class="divInput">
                        <span class="timeLeft" id="currentTime">00:00</span>
                        <input type="range" max="100" min="0" value="0" id="progress" class="progress" style="background-image: linear-gradient(90deg, rgb(236, 31, 85) 0, transparent 0%);">
                        <span class="timeRight" id="songTime">00:00</span>

                    </div>
                    <audio id="audio" src=""></audio>

                </div>
                <div class="playerControlRight">
                    <div class="btnn" style="color : black">
                        <i class="btnvolume fa-solid fa-volume-high" id="volume-up"></i>
                        <i class="fa-solid fa-volume-xmark" id="volume-mute" style="display:none"></i>
                    </div>
                    <input type="range" max="1" min="0" step="0.1" value="0.3" id="volume" class="volume" style="background-image: linear-gradient(90deg, rgb(236, 31, 85) 0, transparent 0%);">
                </div>
            </div>

        </div>
    </div>



    <style>


        #background_song {




        }

       @@keyframes rotate {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
       }

    #background_song {
            
            
            animation: rotate 15s linear infinite;
        }

       

    </style>



    <script>


        var listsong = []

        var IdCurentSong = "";

        const currentTime = document.getElementById("currentTime");
        const audio = document.getElementById("audio");
        const pause = document.getElementById("pause");
        const play = document.getElementById("play");
        const progressBar = document.getElementById("progress");
        const loop = document.getElementById("reloads");
        const loop2 = document.getElementById("reloads2");
        const previous_bt = document.getElementById("previous");
        const next_bt = document.getElementById("nexts");
        const shuffle = document.getElementById("shuffles");
        const volume = document.getElementById("volume");
        const volume_up = document.getElementById("volume-up");
        const volume_mute = document.getElementById("volume-mute");
        let oldVolume;

        const background_song = document.getElementById("background_song");
        const songName = document.getElementById("songName");
        const singerName = document.getElementById("singerName");

        var lengthPlaylist = 2;
        var check_loop = false;
        var check_shuffle = false;
        var index = 0;


        function loadsong(index) {
            IdCurentSong = listsong[index].ID_Song
            audio.src = listsong[index].Path_Song
            
            audio.load();
            audio.currentTime = 0.1;
            var t = "/"+listsong[index].Path_BackGround;
            

            if (t == null) {
                t = "SongBackGround/defaut.png"

            }
            var c = listsong[index].NAME
            var b = listsong[index].Singer.NAME
           

            background_song.style.backgroundImage ="url('" +t+  "')" ;
            singerName.innerHTML = b;
            songName.textContent = c;
            background_song.style.animationPlayState = "paused"

           $.ajax({
     url: '@Url.Action("Tangluotnghe", "Home")',
               method: 'GET',
               data: { id_song: IdCurentSong },
     success: function (data) {
       
     },
    
 });






        }



        $(document).ready(function () {

            $("#play").click(function () {

                audio.play();



            });

            $("#pause").click(function () {

                audio.pause();






            });

            $("#previous").click(function () {

                index = index - 1;

                if (index < 0) {

                    if (audio.currentTime <= 1) {

                        index = lengthPlaylist;
                        loadsong(index);
                        audio.play();
                    }

                    else {
                        index = 0;
                        loadsong(index);
                        audio.play();
                    }




                }
                else {
                    if (audio.currentTime <= 1) {


                        loadsong(index);
                        audio.play();
                    }

                    else {
                        index = index + 1;
                        loadsong(index);
                        audio.play();
                    }


                }


            });

            $("#nexts").click(function () {

                index = index + 1;

                if (index > lengthPlaylist) {

                    index = 0;
                    loadsong(0);
                    audio.play()

                }
                else {
                    loadsong(index);
                    audio.play();
                }


            });

            $("#reloads").click(function () {


                if (check_loop == true) {
                    loop.style.color = "black"
                    check_loop = false;

                } else {
                    loop.style.color = "crimson"
                    check_loop = true;
                    check_shuffle = false;
                    shuffle.style.color = "black";



                }


            });

            $('#progress').on('input', function () {
                let value = progressBar.value;



                var x = (value * audio.duration) / 100

                audio.currentTime = x;

            });

            $("#volume").on('input', function () {
                let value = volume.value;





                audio.volume = value;

                volume_mute.style.display = "none";
                volume_up.style.display = "block";



            });


            $('#shuffles').click( function () {

                if (check_shuffle == true) {

                    check_shuffle = false;

                    shuffle.style.color = "black";


                } else {

                    check_shuffle = true;
                    shuffle.style.color = "crimson"
                    check_loop = false;
                    loop.style.color = "black";

                }





            });
            $("#volume-up").click(function () {
                oldVolume = volume.value;
                var value = 0;
                audio.volume = value;
                volume_mute.style.display = "block";
                volume_up.style.display = "none";



            });
            $("#volume-mute").click(function () {


                volume_mute.style.display = "none";
                volume_up.style.display = "block";
                audio.volume = oldVolume;




            });








        })

        audio.onplay = function () {

            play.style.display = "none";




            pause.style.display = "block";

            background_song.style.animationPlayState = "running";





        }


        audio.onpause = function () {

            pause.style.display = "none";

            play.style.display = "block";

            background_song.style.animationPlayState = "paused";



        }

        audio.ontimeupdate = function () {


            currentTime.textContent = formatTime(audio.currentTime);

            var percent = (audio.currentTime / audio.duration) * 100;
            //console.log(percent + " %");


            progressBar.value = percent;


        }

        audio.onloadedmetadata = function () {
            songTime.textContent = formatTime(audio.duration);
            //console.log(formatTime(audio.duration));
        };


        audio.onended = function () {


            console.log("check_loop :" + check_loop);
            if (check_loop == true) {

                loadsong(index);
                audio.play();


            }
            else if (index >= lengthPlaylist) {
                console.log(index);
                index = 0;


                loadsong(index);
                audio.play();

            }

            else if (check_shuffle==true) {

                var x = getRandom(0, lengthPlaylist);
                loadsong(x);
                audio.play();

            }


            else {
                index = index + 1;
                loadsong(index);
                audio.play();
                console.log("index :" + index);

            }



        }





        function formatTime(seconds) {
            const minutes = Math.floor(seconds / 60);
            const secs = Math.floor(seconds % 60);
            const formattedSecs = secs < 10 ? '0' + secs : secs;
            return `${minutes}:${formattedSecs}`;
        }
        function getRandom(min, max) {
            return Math.floor(Math.random() * (max - min + 1)) + min;
        }










    </script>



   


    <script>

        $(document).ready(function () {
    // Xử lý sự kiện click vào 'library'
    $('#library').click(function () {
        $.ajax({
            url: '@Url.Action("Library", "Library")',
            method: 'GET',
            success: function (data) {
                $('#divBodyContent').html(data);
                history.pushState({ page: "library" }, '', '@Url.Action("Library", "Library")');
            },
            error: function () {
                alert('Error loading library content');
            }
        });
    });

    // Xử lý sự kiện click vào 'Account'
    $('#Account').click(function () {
        $.ajax({
            url: '@Url.Action("Account", "Account")',
            method: 'GET',
            success: function (data) {
                $('#divBodyContent').html(data);
                history.pushState({ page: "Account" }, '', '@Url.Action("Account", "Account")');
            },
            error: function () {
                alert('Error loading account content');
            }
        });
    });

    // Xử lý sự kiện click vào 'Playlist'
    $('#Playlist').click(function () {
        $.ajax({
            url: '@Url.Action("Playlist", "Playlist")',
            method: 'GET',
            success: function (data) {
                $('#divBodyContent').html(data);
                history.pushState({ page: "Playlist" }, '', '@Url.Action("Playlist", "Playlist")');
            },
            error: function () {
                alert('Error loading playlist content');
            }
        });
    });

    window.onpopstate = function (event) {
        if (event.state) {

            let url = '';
            if (event.state.page === "library") {
                url = '@Url.Action("Library", "Library")';
            } else if (event.state.page === "Account") {
                url = '@Url.Action("Account", "Account")';
            } else if (event.state.page === "Playlist") {
                url = '@Url.Action("Playlist", "Playlist")';
            } 


                $.ajax({
                    url: url,
                    method: 'GET',
                  success: function (data) {
                      $('#divBodyContent').html(data);

                    },
                    error: function () {
                        alert('Error loading content');
                    }
                });

        }
    };
        });




        $(document).ready(function () {
            $('#searchForm').on('submit', function (event) {
                event.preventDefault();

                var query = $('#textInput').val(); // Lấy giá trị từ ô nhập liệu
                $.ajax({
                    url: '/Home/Search', // Đường dẫn đến controller
                    type: 'GET', // Phương thức HTTP
                    data: { query: query }, // Dữ liệu gửi đi
                    success: function (response) {
                        console.log(response); // Kiểm tra toàn bộ phản hồi
                        var singers = response.Singers || [];
                        var albums = response.Albums || [];
                        var songs = response.Songs || [];
                        var types = response.Types || [];

                        // Tạo HTML để hiển thị danh sách ca sĩ
                        var html = '<h3>Danh sách ca sĩ:</h3><ul>';
                        singers.forEach(function (singer) {
                            html += '<li>' + singer.NAME + '</li>';
                        });
                        html += '</ul>';


                        html += '<h3>Danh sách album:</h3><ul>';
                        albums.forEach(function (album) {
                            html += '<li>' + album.Name_Album + '</li>';
                        });
                        html += '</ul>';


                        html += '<h3>Danh sách bài hát:</h3><ul>';
                        songs.forEach(function (song) {
                            html += '<li>' + song.NAME + '</li>';
                        });
                        html += '</ul>';

                        html += '<h3>Danh sách thể loại:</h3><ul>';
                        types.forEach(function (type) {
                            html += '<li>' + type.TypeName + '</li>';
                        });
                        html += '</ul>';

                        $('#divBodyContent').html(html);
                    },
                    error: function (xhr, status, error) {

                        console.error(error);
                    }
                });


            });
        });








        //them nhac cho playlist
        $(document).ready(function () {

            $('#moreOptions').click(function () {

                $('#playlistMenu').toggle();

                 $.ajax({
                url: '@Url.Action("getAllPlaylist", "Playlist")',
                 method: 'GET',
                     success: function (data) {
                         var $listplaylist = $('.playlistMenu');
                         $listplaylist.empty();

                         data.forEach(function (playlist) {
                             var html = `<li class="addToPlaylist" data-playlist-id="${playlist.ID_Playlist}">${playlist.Name_Playlist}</li>

            `;

                             $listplaylist.append(html);

                             $('.addToPlaylist').click(function () {





                             })



                         })
                         console.log(data);
     },
                error: function () {
                    alert('Error loading playlist content');
     }
 });




            });


        });





    </script>

</body>


</html>
