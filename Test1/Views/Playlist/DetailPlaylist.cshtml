@model Test1.Models.PlaylistDetailViewModel
@using Newtonsoft.Json




<div class="detailTypes-wrapper">
    <div class="div-detail-types">
        <div class="detail-left">
            <!-- Hiển thị ảnh nền và tên playlist -->
            <img id="vcc" src="/img/vinyl.jpg" />
            <span class="detail-type-name">@Model.Name_Playlist</span>
            <div class="detail-left-action">

            </div>


            <div id="contextMenu2" class="context-menu" style="display: none;">
                <ul>
                    
                    <li  id ="ca3" onclick="deleteSonginPlaylist()">Xóa</li>

                </ul>
            </div>
        </div>

        <div class="detail-right">
            <div class="select-header">
                <div class="select-left">
                    <span>Bài Hát</span>
                </div>
                <div class="select-center">
                    <span>Ca sĩ</span>
                </div>
                <div class="select-right">
                    <span>Lượt nghe</span>
                </div>
            </div>
          

            <div class="select-list">
                <!-- Lặp qua danh sách bài hát -->
                @foreach (var song in Model.Songs)
                {
                    <div class="select-item" oncontextmenu="showContextMenucay(event, @song.ID_Song,@Model.ID_Playlist )">
                        <div class="selec-item-left">
                            <img src="/@song.Path_BackGround" />
                            <span>@song.NAME</span>
                        </div>
                        <div class="select-item-center">
                            <span>@song.Singers.NAME</span>
                        </div>
                        <div class="select-item-right">
                            <span>@song.Plays</span>
                        </div>
                    </div>

                }
            </div>
        </div>
    </div>
</div>

<style>
    .detailTypes-wrapper {
        width: 100%;
        margin-top: 100px;
    }

    .div-detail-types {
        display: flex;
        flex-direction: row;
    }

    .detail-left {
        display: flex;
        flex-direction: column;
    }



        .detail-left img {
            width: 300px;
            height: 300px;
            object-fit: cover;
            border-radius: 5px;
        }

    .detail-type-name {
        margin-top: 10px;
        font-size: 20px;
        font-weight: 700;
        line-height: 1.5;
        margin-bottom: 0;
        text-transform: none;
        width: 100%;
        text-align: center;
    }

    .detail-right {
        flex: 1;
        margin-left: 20px;
    }

    .select-header {
        width: 100%;
        display: flex;
        align-items: center;
        text-align: left;
        padding: 10px;
        border-radius: 5px;
        border-bottom: 1px solid rgba(0, 0, 0, 0.05);
    }

    .select-left {
        width: 50%;
    }

    .select-center {
        flex-basis: auto;
        flex-grow: 1;
        flex-shrink: 1;
        text-align: left;
        align-self: center;
    }

    .select-right {
    }

    .select-list {
    }

    .select-item {
        align-items: center;
        display: flex;
        text-align: left;
        padding: 10px;
        border-radius: 5px;
        -webkit-user-select: none;
        -ms-user-select: none;
        user-select: none;
        border-bottom: 1px solid rgba(0, 0, 0, 0.05);
    }

        .select-item:hover {
            background-color: rgba(0, 0, 0, 0.05);
        }

    .selec-item-left {
        width: 50%;
        display: flex;
        text-align: left;
        align-items: center;
    }

        .selec-item-left img {
            width: 40px;
            height: 40px;
            object-fit: cover;
            border-radius: 2px;
            margin-right: 10px;
        }

    .select-item-center {
        flex: 1;
    }

    .detail-left-action {
        display: flex;
        align-items: center;
        justify-content: center;
        margin-top: 10px;
    }

    .detail-left-btn {
        font-size: 14px;
        padding: 9px 24px;
        font-weight: 400;
        border: 1px solid rgba(0, 0, 0, 0.1);
        color: #fff;
        background-color: #8d22c3;
        border-radius: 20px;
        gap: 5px;
    }

    .select-item {
        align-items: center;
        display: flex;
        text-align: left;
        padding: 10px;
        border-radius: 5px;
        -webkit-user-select: none;
        -ms-user-select: none;
        user-select: none;
        border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        transition: background-color 0.3s ease; /* Thêm hiệu ứng chuyển tiếp */
    }

        .select-item:hover {
            background-color: rgba(141, 34, 195, 0.1); /* Màu nền khi hover */
        }

    .selec-item-left {
        width: 50%;
        display: flex;
        text-align: left;
        align-items: center;
    }

        .selec-item-left img {
            width: 40px;
            height: 40px;
            object-fit: cover;
            border-radius: 2px;
            margin-right: 10px;
            transition: transform 0.3s ease; /* Thêm hiệu ứng chuyển tiếp cho hình ảnh */
        }

    .select-item:hover .selec-item-left img {
        transform: scale(1.1); /* Phóng to hình ảnh khi hover */
    }






    .context-menu li {
        width: 75%;
        padding: 15px;
        text-align: center;
        font-size: 16px;
        color: #fff;
        background-color: #9024c4;
        border-radius: 5px;
        margin: 5px 0;
        cursor: pointer;
        transition: background-color 0.3s;
    }

            .context-menu li:hover {
                background-color: #0056b3;
            }



</style>

<script>

            var songsArray = [];
            $(document).ready(function () {
                // Danh sách bài hát
                var a = @Html.Raw(JsonConvert.SerializeObject(Model.Songs));

                console.log(a);
                 a.forEach(function (songItem) {
    var song = {
        ID_Song: songItem.ID_Song,
        NAME : songItem.NAME,
        Path_Song: songItem.Path_Song,
        Singer: {
            ID_Singer: songItem.Singers.ID_Singer,
            NAME: songItem.Singers.NAME,
        },
        Path_BackGround: songItem.Path_BackGround,
        Type: songItem.Type
    };
                     songsArray.push(song);
});



            });




    listsong = songsArray;



    $(".select-item").click(function () {


        var index = $(this).index();
        lengthPlaylist = listsong.length;

        console.log(listsong);
        console.log(lengthPlaylist)

                    loadsong(index);
                    audio.play();


                });




var currentPlaylistId = @Model.ID_Playlist;

    var ca1 = 0;
    var ca2 = 0;
function showContextMenucay(event,songId ,playlistId) {
    event.preventDefault();
    console.log(songId)
    console.log(playlistId)

    const contextMenu2 = document.getElementById('contextMenu2');
    ca1=songId;
    ca2=playlistId;

    contextMenu2.style.display = 'block';




}

$(document).click(function () {
    $("#contextMenu2").hide();
});


    function deleteSonginPlaylist() {

        console.log(ca1)
        console.log(ca2)

        $.ajax({
            url: '/Playlist/DeleteSongInPlaylist',
            type: 'GET',
            data: { songId: ca1, playlistId: ca2 },
            success: function (response) {
                if (response.success) {
                    alert(response.message);

 $.ajax({
     url: '@Url.Action("DetailPlaylist", "Playlist")',
     type: 'GET',
     data: { id_playlist: ca2 },
     success: function (response) {
         $('#divBodyContent').html(response);
         history.pushState(null, '', '/Playlist/' + playlist.Name_Playlist);
     },
     error: function () {
         alert('Lỗi khi tải chi tiết playlist.');
     }
 });

                } else {
                    alert(response.message);
                }
            },
            error: function () {
                alert("Đã xảy ra lỗi trong quá trình xóa bài hát.");
            }
        });

    }



</script>