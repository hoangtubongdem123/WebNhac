@model Tuple<List<Test1.Models.SongViewModel>, List<Test1.Models.Types>, List<Test1.Models.Singers>>
@{
    int Index = 0;
}
@using Newtonsoft.Json
<div class="page-search">


    @if (Model.Item3 != null && Model.Item3.Any())
    {
        <div class="wrapperSection">
            <div class="wrapperSectionHeading">
                <h2 class="sectionLinkH2">Ca sĩ </h2>
            </div>
            <div class="wrapperSectionBody">
                @foreach (var singer in Model.Item3)
                {
                    <div class="SectionItem" id="SectionItemSinger" data-id="@singer.ID_Singer">
                        <div class="SectionItemImg-Artis">
                            <img src="@singer.Path_Singer" alt="@singer.NAME" />
                        </div>
                        <div class="SectionItemTextArt">
                            <h3 class="SectionItemTextName">@singer.NAME</h3>
                        </div>
                    </div>

                }
            </div>
        </div>
    }

    <!-- Phần hiển thị Bài hát -->
    @if (Model.Item1 != null && Model.Item1.Any())
    {
        <div class="wrapperSection">
            <div class="wrapperSectionHeading">
                <h2 class="sectionLinkH2">Bài hát</h2>
            </div>
            <div class="wrapperSectionBody">
                <div class="headingColum grid-template-column" style="width:100%">
                    <div class="div#">
                        <span>#</span>
                    </div>
                    <div class="theloai">
                        <span>Tiêu đề</span>
                    </div>
                    <div class="timeLogo">
                        <span>Lượt Nghe </span>
                        <div class="thoiluong">
                            <svg data-encore-id="icon" role="img" aria-hidden="true" viewBox="0 0 16 16" class="Svg-sc-ytk21e-0 dYnaPI">
                                <path d="M8 1.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13zM0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8z"></path>
                                <path d="M8 3.25a.75.75 0 0 1 .75.75v3.25H11a.75.75 0 0 1 0 1.5H7.25V4A.75.75 0 0 1 8 3.25z"></path>
                            </svg>
                        </div>
                    </div>
                </div>



                @for (int i = 0; i < Model.Item1.Count; i++)
                {
                    <div class="songItem grid-template-column" data-id="@Model.Item1[i].ID_Song">
                        <div class="songItem-index">
                            <span>@(i+1)</span>
                        </div>
                        <div class="songItem-text">
                            <div class="divSongItem-text">
                                <span>@Model.Item1[i].NAME</span>
                                <span class="nameArts">@Model.Item1[i].Singers.NAME</span>
                            </div>
                        </div>
                        <div class="songItem-time">
                            <span>@Model.Item1[i].Plays</span>
                        </div>
                    </div>
                }

            </div>
        </div>
    }

    <!-- Phần hiển thị Thể loại -->
    @if (Model.Item2 != null && Model.Item2.Any())
    {
        <div class="wrapperSection">
            <div class="wrapperSectionHeading">
                <h2 class="sectionLinkH2">Thể Loại</h2>
            </div>
            <div class="wrapperSectionBody">
                @foreach (var type in Model.Item2)
                {
                    <div class="SectionItem" id="SectionItemType" data-id="@type.ID_Type">
                        <div class="SectionItemImg">
                            <img src="@type.Path_Type" alt="item">
                        </div>
                        <div class="SectionItemIcon"></div>
                        <div class="SectionItemText">
                            <h3 class="SectionItemTextName">@type.TypeName</h3>
                        </div>
                    </div>
                }
            </div>
        </div>
    }

</div>
<script>


    $(document).on('click', '#SectionItemSinger', function () {
    var id_singer = $(this).data('id');

    $.ajax({
        url: '@Url.Action("DetailSinger", "Library")',
        type: 'GET',
        data: { id_singer: id_singer },
        success: function (response) {
            $('#divBodyContent').html(response);
            var singerName = $(this).find('.SectionItemTextName').text();
            history.pushState(null, '', `/Singer/${encodeURIComponent(singerName)}`);
        },
        error: function () {
            alert('Lỗi khi tải chi tiết ca sĩ.');
        }
    });
});


    $(document).on('click', '#SectionItemType', function (e) {
    e.preventDefault();


    var id_type = $(this).data('id');
    var typeName = $(this).find('.SectionItemTextName').text();


    $.ajax({
        url: '@Url.Action("DetailType", "Library")',
        type: 'GET',
        data: { id_type: id_type },
        success: function (response) {
            $('#divBodyContent').html(response);
            history.pushState(null, '', `/Type/${encodeURIComponent(typeName)}`);
        },
        error: function () {
            alert('Lỗi khi tải chi tiết loại.');
        }
    });
});

var songsArray = [];

$(document).ready(function () {
    var a = @Html.Raw(JsonConvert.SerializeObject(Model.Item1));
    console.log(a);  


    a.forEach(function (songItem) {
        var song = {
            ID_Song: songItem.ID_Song,
            NAME: songItem.NAME,
            Path_Song: songItem.Path_Song,
            Singer: songItem.Singers
                ? {
                    ID_Singer: songItem.Singers.ID_Singer,
                    NAME: songItem.Singers.NAME,
                  }
                : { ID_Singer: null, NAME: "Unknown" },
            Path_BackGround: songItem.Path_BackGround,
        };
        songsArray.push(song);
    });
});


listsong = songsArray;


    $(document).on("click", ".songItem", function () {
        var songID = $(this).data('id');  
        console.log(songID);  

       
        var song = songsArray.find(function (s) {
            return s.ID_Song === songID;
        });

        console.log(song);  

       
        var index = songsArray.indexOf(song);  
        loadsong(index);
        audio.play();
    });










</script>





